function levenshtein($s, $t)
{
	$m = length($s);
	$n = length($t);
	
	$i = 0;
	while ($i <= $m)
	{
		$d[$i][0] = $i;
		$i += 1;
	}
	$j = 0;
	while ($j <= $n)
	{
		$d[0][$j] = $j;
		$j += 1;
	}

	$i = 1;
	while ($i <= $m)
	{
		$j = 1;
		while ($j <= $n)
		{
			$c = ($s[$i - 1] == $t[$j - 1]) ? 0 : 1;
			$d[$i][$j] = min([$d[$i - 1][$j] + 1, $d[$i][$j - 1] + 1, $d[$i - 1][$j - 1] + $c]);
			$j += 1;
		}
		$i += 1;
	}

	return $d[$m][$n];
}

function min($a)
{
	return array_reduce(
		function ($c, $i) {
			return $i < $c ? $i : $c;
		}, $a);
}
